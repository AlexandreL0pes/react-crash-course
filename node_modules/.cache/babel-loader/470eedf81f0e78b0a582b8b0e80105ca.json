{"ast":null,"code":"var _jsxFileName = \"/srv/react-docker/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Backdrop from './Backdrop';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [showModal, setModalIsOpen] = useState(false); // React Hook\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  function cancelHandler() {\n    setModalIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      onCancel: cancelHandler,\n      onConfirm: cancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onClick: cancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"rTWcZ2TYfp2d5Nh1snXeXfgvsOk=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/srv/react-docker/src/components/Todo.js"],"names":["useState","Backdrop","Modal","Todo","props","showModal","setModalIsOpen","deleteHandler","cancelHandler","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,cAAZ,IAA+BN,QAAQ,CAAC,KAAD,CAA7C,CADmB,CACmC;;AAEtD,WAASO,aAAT,GAAyB;AACvBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAED,WAASE,aAAT,GAAyB;AACvBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAMF,KAAK,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEF,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKIF,SAAS,iBAAI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEG,aAAjB;AAAgC,MAAA,SAAS,EAAEA;AAA3C;AAAA;AAAA;AAAA;AAAA,YALjB,EAMIH,SAAS,iBAAI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtBQL,I;;KAAAA,I;AAwBT,eAAeA,IAAf","sourcesContent":["import { useState } from 'react';\nimport Backdrop from './Backdrop';\nimport Modal from './Modal';\n\nfunction Todo(props) {\n  const [showModal, setModalIsOpen ] = useState(false); // React Hook\n  \n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  function cancelHandler() {\n    setModalIsOpen(false)\n  }\n\n\n  return (\n    <div className=\"card\">\n      <h2>{ props.text }</h2>\n      <div className=\"actions\">\n        <button className=\"btn\" onClick={deleteHandler}>Delete</button>\n      </div>\n      { showModal && <Modal onCancel={cancelHandler} onConfirm={cancelHandler} /> }\n      { showModal && <Backdrop onClick={cancelHandler}/> }\n    </div>\n  )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}